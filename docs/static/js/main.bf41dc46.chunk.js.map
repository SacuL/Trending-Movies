{"version":3,"sources":["header/Header.js","main/navigation/Selection.js","main/navigation/FilterSlider.js","main/navigation/Button.js","main/navigation/Navigation.js","main/movies/MovieListItem.js","main/movies/Movies.js","main/Main.js","movie/LoadingMovie.js","movie/Movie.js","App.js","index.js"],"names":["Header","className","this","props","class","alt","src","onClick","onClickFilter","React","Component","Selection","genres","genre","onGenreChange","value","onChange","map","key","id","name","Range","createSliderWithTooltip","Slider","FilterSlider","data","type","label","min","max","forceUpdate","step","marks","onAfterChange","defaultValue","tipProps","placement","visible","sliderTrackStyle","backgroundColor","height","handleStyle","borderColor","Button","children","Navigation","fetch","url","then","response","json","setGenres","catch","error","console","log","year","rating","runtime","onSearchButtonClick","MovieListItem","movie","title","poster_path","release_date","vote_average","imgUrl","substring","to","Movies","movies","page","onPageIncrease","onPageDecrease","Main","state","total_pages","moviesUrl","process","setState","event","target","generateUrl","params","genreId","find","fetchMovies","storeMovies","results","result","vote_count","genre_ids","nextPage","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","getStateFromLocalStorage","parse","getItem","savedState","length","nextProps","nextState","showFilterClass","showFilter","LoadingMovie","Movie","isLoading","movieId","match","movieUrl","backdrop_path","overview","backgroundStyle","backgroundImage","style","index","App","distanceToTop","bind","window","pageYOffset","addEventListener","handleScroll","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf41dc46.chunk.js","sourcesContent":["// Header.js\r\n\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className={this.props.className}>\r\n        <img\r\n          class=\"logoOnly\"\r\n          alt=\"Trending Movies Logo\"\r\n          src=\"Trending-Movies/logo-86-78.png\"\r\n        ></img>\r\n        <img\r\n          class=\"logoText\"\r\n          alt=\"Trending Movies Logo\"\r\n          src=\"Trending-Movies/main-logo-200-100.png\"\r\n        ></img>\r\n        <img onClick={this.props.onClickFilter} class=\"filterIcon\" alt=\"Filter\" src=\"filter_icon.svg\"></img>\r\n        <h1>What's hot NOW?!</h1>\r\n        <div></div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Selection.css\";\r\n\r\nconst Selection = ({ genres, genre, onGenreChange }) => (\r\n  <div className=\"selection\">\r\n    <label>Genre</label>\r\n    <select value={genre} onChange={onGenreChange}>\r\n      {genres.map(genre => (\r\n        <option key={genre.id} value={genre.name}>\r\n          {genre.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport \"./FilterSlider.css\";\r\n\r\nimport Slider from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nclass FilterSlider extends React.Component {\r\n  componentDidMount() {\r\n    this.forceUpdate(); // Force redraw to fix tooltip position\r\n  }\r\n\r\n  onChange = data => {\r\n    this.props.onChange({\r\n      type: this.props.data.label,\r\n      value: { min: data[0], max: data[1] }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { min, max, step, value, label } = this.props.data;\r\n\r\n    const marks = {};\r\n    marks[min] = min;\r\n    marks[max] = max;\r\n\r\n    return (\r\n      <div className=\"slider\">\r\n        <label>{label}</label>\r\n        <Range\r\n          marks={marks}\r\n          min={min}\r\n          max={max}\r\n          onAfterChange={this.onChange}\r\n          step={step}\r\n          defaultValue={[value.min, value.max]}\r\n          tipProps={{ placement: \"bottom\", visible: true }}\r\n          sliderTrackStyle={{ backgroundColor: 'blue', height: 10 }}\r\n          handleStyle={{\r\n            borderColor: \"#a75d65\",\r\n            backgroundColor: \"white\"\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterSlider;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ onClick, children }) => (\r\n  <div className=\"my-button\">\r\n    <button onClick={onClick}>{children}</button>\r\n  </div>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport Selection from \"./Selection\";\r\nimport FilterSlider from \"./FilterSlider\";\r\nimport Button from \"./Button\";\r\n\r\nclass Navigation extends React.Component {\r\n  componentDidMount() {\r\n    fetch(this.props.url)\r\n      .then(response => response.json())\r\n      .then(data => this.props.setGenres(data.genres))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      genre,\r\n      genres,\r\n      onGenreChange,\r\n      onChange,\r\n      year,\r\n      rating,\r\n      runtime,\r\n      onSearchButtonClick\r\n    } = this.props;\r\n    return (\r\n      <section className={this.props.className}>\r\n\r\n        <img onClick={this.props.onClickFilter} class=\"navigation-close\" alt=\"Filter\" src=\"Trending-Movies/cross.svg\"></img>\r\n\r\n        <Selection\r\n          genre={genre}\r\n          genres={genres}\r\n          onGenreChange={onGenreChange}\r\n        />\r\n\r\n        <FilterSlider data={year} onChange={onChange} />\r\n        <FilterSlider data={rating} onChange={onChange} />\r\n        <FilterSlider data={runtime} onChange={onChange} />\r\n\r\n        <Button onClick={onSearchButtonClick}>Search</Button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./MovieListItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieListItem = ({ movie }) => {\r\n  const { id, title, poster_path, release_date, vote_average } = movie;\r\n  const imgUrl = `https://image.tmdb.org/t/p/w342/${poster_path}`;\r\n  const year = release_date.substring(0, 4);\r\n\r\n  return (\r\n    <li className=\"movie-item\">\r\n      <Link to={`/movie/${id}`} className=\"thumbnail\">\r\n        <img src={imgUrl} alt={title} />\r\n        <div className=\"movie-description\">\r\n          <h2>{title}</h2>\r\n          <section className=\"movie-details\">\r\n            <div className=\"movie-year\">\r\n              <span className=\"title\">Year</span>\r\n              <span>{year}</span>\r\n            </div>\r\n            <div className=\"movie-rating\">\r\n              <span className=\"title\">Rating</span>\r\n              <span>{vote_average}</span>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n","// Movies.js\r\n\r\nimport React from \"react\";\r\nimport \"./Movies.css\";\r\nimport MovieListItem from \"./MovieListItem\";\r\nimport Button from \"../navigation/Button\";\r\n\r\nconst Movies = ({ movies, page, onPageIncrease, onPageDecrease }) => (\r\n  <section>\r\n    <ul className=\"movies\">\r\n      {movies.map(movie => (\r\n        <MovieListItem key={movie.id} movie={movie} />\r\n      ))}\r\n    </ul>\r\n    <div className=\"pagination\">\r\n      <Button onClick={onPageDecrease}>Previous</Button>\r\n      <span>{`Page ${page}`}</span>\r\n      <Button onClick={onPageIncrease}>Next</Button>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Movies;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./Main.css\";\r\nimport Navigation from \"./navigation/Navigation\";\r\nimport Movies from \"./movies/Movies\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    page: 1,\r\n    total_pages: 1,\r\n    moviesUrl: `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`,\r\n    movies: [],\r\n\r\n    url: `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`,\r\n    genre: \"Action\",\r\n    genres: [],\r\n    year: {\r\n      label: \"year\",\r\n      min: 1990,\r\n      max: 2020,\r\n      step: 1,\r\n      value: { min: 2015, max: 2020 }\r\n    },\r\n    rating: {\r\n      label: \"rating\",\r\n      min: 0,\r\n      max: 10,\r\n      step: 1,\r\n      value: { min: 8, max: 10 }\r\n    },\r\n    runtime: {\r\n      label: \"runtime\",\r\n      min: 0,\r\n      max: 300,\r\n      step: 15,\r\n      value: { min: 60, max: 120 }\r\n    }\r\n  };\r\n\r\n  setGenres = genres => {\r\n    this.setState({ genres });\r\n  };\r\n\r\n  onGenreChange = event => {\r\n    this.setState({ genre: event.target.value });\r\n  };\r\n\r\n  onChange = data => {\r\n    this.setState({\r\n      [data.type]: {\r\n        ...this.state[data.type],\r\n        value: data.value\r\n      }\r\n    });\r\n  };\r\n\r\n  generateUrl = params => {\r\n    const { genres, year, rating, runtime, page } = params;\r\n    const selectedGenre = genres.find(genre => genre.name === params.genre);\r\n    const genreId = selectedGenre.id;\r\n\r\n    const moviesUrl =\r\n      `https://api.themoviedb.org/3/discover/movie?` +\r\n      `api_key=${process.env.REACT_APP_TMDB_API_KEY}&` +\r\n      `language=en-US&sort_by=popularity.desc&` +\r\n      `with_genres=${genreId}&` +\r\n      `primary_release_date.gte=${year.value.min}-01-01&` +\r\n      `primary_release_date.lte=${year.value.max}-12-31&` +\r\n      `vote_average.gte=${rating.value.min}&` +\r\n      `vote_average.lte=${rating.value.max}&` +\r\n      `with_runtime.gte=${runtime.value.min}&` +\r\n      `with_runtime.lte=${runtime.value.max}&` +\r\n      `page=${page}&`;\r\n\r\n    this.setState({ moviesUrl });\r\n  };\r\n\r\n  onSearchButtonClick = () => {\r\n    this.setState({ page: 1 });\r\n    this.generateUrl(this.state);\r\n  };\r\n\r\n  fetchMovies = url => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => this.storeMovies(data))\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  storeMovies = data => {\r\n    const movies = data.results.map(result => {\r\n      const {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      } = result;\r\n      return {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      };\r\n    });\r\n\r\n    this.setState({ movies, total_pages: data.total_pages });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedState = this.getStateFromLocalStorage();\r\n    if (!savedState || (savedState && !savedState.movies.length)) {\r\n      this.fetchMovies(this.state.moviesUrl);\r\n    } else {\r\n      this.setState({ ...savedState });\r\n      this.generateUrl(savedState);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    this.saveStateToLocalStorage();\r\n    if (this.state.moviesUrl !== nextState.moviesUrl) {\r\n      this.fetchMovies(nextState.moviesUrl);\r\n    }\r\n    if (this.state.page !== nextState.page) {\r\n      this.generateUrl(nextState);\r\n    }\r\n  }\r\n\r\n  onPageIncrease = () => {\r\n    const { page, total_pages } = this.state;\r\n    const nextPage = page + 1;\r\n    if (nextPage <= total_pages) {\r\n      this.setState({ page: nextPage });\r\n    }\r\n  };\r\n\r\n  onPageDecrease = () => {\r\n    const nextPage = this.state.page - 1;\r\n    if (nextPage > 0) {\r\n      this.setState({ page: nextPage });\r\n    }\r\n  };\r\n\r\n  saveStateToLocalStorage = () => {\r\n    localStorage.setItem(\"pinmovie.params\", JSON.stringify(this.state));\r\n  };\r\n\r\n  getStateFromLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem(\"pinmovie.params\"));\r\n  };\r\n\r\n  render() {\r\n    const showFilterClass = this.props.showFilter\r\n      ? \"navigation-open\"\r\n      : \"navigation\";\r\n    return (\r\n      <Fragment>\r\n        <section className=\"main\">\r\n          <Navigation\r\n            onClickFilter={this.props.onClickFilter}\r\n            className={showFilterClass}\r\n            onChange={this.onChange}\r\n            onGenreChange={this.onGenreChange}\r\n            setGenres={this.setGenres}\r\n            onSearchButtonClick={this.onSearchButtonClick}\r\n            {...this.state}\r\n          ></Navigation>\r\n          <Movies\r\n            movies={this.state.movies}\r\n            page={this.state.page}\r\n            onPageIncrease={this.onPageIncrease}\r\n            onPageDecrease={this.onPageDecrease}\r\n          />\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst LoadingMovie = () => <h2>Loading Movie</h2>;\r\n\r\nexport default LoadingMovie;\r\n","import React from \"react\";\r\nimport \"./Movie.css\";\r\nimport LoadingMovie from \"./LoadingMovie\";\r\n\r\nclass Movie extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movie: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`;\r\n    fetch(movieUrl)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ movie: data, isLoading: false }))\r\n      .catch(error => console.log(\"Error:\", error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      backdrop_path,\r\n      release_date,\r\n      genres,\r\n      overview,\r\n      vote_average,\r\n      runtime\r\n    } = this.state.movie;\r\n\r\n    const year = release_date ? release_date.substring(0, 4) : null;\r\n\r\n    const backgroundStyle = {\r\n      backgroundImage: `url(http://image.tmdb.org/t/p/w1280/${backdrop_path})`\r\n    };\r\n\r\n    return (\r\n      <div className=\"movie-page\">\r\n        {this.state.isLoading ? (\r\n          <LoadingMovie />\r\n        ) : (\r\n          <div>\r\n            <div className=\"movie-image\" style={backgroundStyle} />\r\n            <div className=\"movie-details\">\r\n              <h1>\r\n                {title}\r\n                <span>({year})</span>\r\n              </h1>\r\n              <section className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                  <div key={genre.id}>\r\n                    <span>{genre.name}</span>\r\n                    {index < genres.length - 1 && (\r\n                      <span className=\"separator\">|</span>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </section>\r\n              <h5>\r\n                Rating:\r\n                <span>{vote_average}</span>\r\n              </h5>\r\n              <h5>\r\n                Runtime:\r\n                <span>{`${runtime} min`}</span>\r\n              </h5>\r\n              <h4>Overview</h4>\r\n              <p>{overview}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./header/Header\";\r\nimport Main from \"./main/Main\";\r\nimport Movie from \"./movie/Movie\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    distanceToTop: 0,\r\n    showFilter: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickFilter = this.onClickFilter.bind(this);\r\n  }\r\n\r\n  handleScroll() {\r\n    this.setState({ distanceToTop: window.pageYOffset });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll.bind(this));\r\n  }\r\n\r\n  onClickFilter() {\r\n    this.setState({ showFilter: !this.state.showFilter });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className={this.state.distanceToTop > 250 ? \"down\" : \"\"}>\r\n          <Header onClickFilter={this.onClickFilter} className=\"clone\" />\r\n          <Header onClickFilter={this.onClickFilter} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={() => <Main onClickFilter={this.onClickFilter} showFilter={this.state.showFilter} />}\r\n            />\r\n            <Route path=\"/movie/:movieId\" component={Movie} />\r\n            {/* <Route component={NotFound} /> */}\r\n            <Route render={() => <Main onClickFilter={this.onClickFilter} showFilter={this.state.showFilter} />} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}