{"version":3,"sources":["header/Header.js","main/navigation/Selection.js","main/navigation/FilterSlider.js","main/navigation/Button.js","main/navigation/Navigation.js","main/movies/MovieListItem.js","main/movies/Movies.js","main/Main.js","movie/LoadingMovie.js","movie/Movie.js","App.js","index.js"],"names":["Header","alt","height","src","Selection","genres","genre","onGenreChange","className","value","onChange","map","key","id","name","Range","createSliderWithTooltip","Slider","FilterSlider","data","props","type","label","min","max","this","forceUpdate","step","marks","onAfterChange","defaultValue","tipProps","placement","visible","sliderTrackStyle","backgroundColor","handleStyle","borderColor","React","Component","Button","onClick","children","Navigation","fetch","url","then","response","json","setGenres","catch","error","console","log","year","rating","runtime","onSearchButtonClick","MovieListItem","movie","title","poster_path","release_date","vote_average","imgUrl","substring","to","Movies","movies","page","onPageIncrease","onPageDecrease","Main","state","total_pages","moviesUrl","process","setState","event","target","generateUrl","params","genreId","find","fetchMovies","storeMovies","results","result","vote_count","genre_ids","nextPage","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","getStateFromLocalStorage","parse","getItem","savedState","length","nextProps","nextState","LoadingMovie","Movie","isLoading","movieId","match","movieUrl","backdrop_path","overview","backgroundStyle","backgroundImage","style","index","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f191748.chunk.js","sourcesContent":["// Header.js\r\n\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <img alt=\"Trending Movies Logo\" height='78px' src='/main-logo-200-100.png'></img>\r\n    <h1>What's hot NOW?!</h1>\r\n    <div></div>\r\n  </header>\r\n)\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Selection.css\";\r\n\r\nconst Selection = ({ genres, genre, onGenreChange }) => (\r\n  <div className=\"selection\">\r\n    <label>Genre</label>\r\n    <select value={genre} onChange={onGenreChange}>\r\n      {genres.map(genre => (\r\n        <option key={genre.id} value={genre.name}>\r\n          {genre.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport \"./FilterSlider.css\";\r\n\r\nimport Slider from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nclass FilterSlider extends React.Component {\r\n  componentDidMount() {\r\n    this.forceUpdate(); // Force redraw to fix tooltip position\r\n  }\r\n\r\n  onChange = data => {\r\n    this.props.onChange({\r\n      type: this.props.data.label,\r\n      value: { min: data[0], max: data[1] }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { min, max, step, value, label } = this.props.data;\r\n\r\n    const marks = {};\r\n    marks[min] = min;\r\n    marks[max] = max;\r\n\r\n    return (\r\n      <div className=\"slider\">\r\n        <label>{label}</label>\r\n        <Range\r\n          marks={marks}\r\n          min={min}\r\n          max={max}\r\n          onAfterChange={this.onChange}\r\n          step={step}\r\n          defaultValue={[value.min, value.max]}\r\n          tipProps={{ placement: \"bottom\", visible: true }}\r\n          sliderTrackStyle={{ backgroundColor: 'blue', height: 10 }}\r\n          handleStyle={{\r\n            borderColor: \"#a75d65\",\r\n            backgroundColor: \"white\"\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterSlider;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ onClick, children }) => (\r\n  <div className=\"my-button\">\r\n    <button onClick={onClick}>{children}</button>\r\n  </div>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport Selection from \"./Selection\";\r\nimport FilterSlider from \"./FilterSlider\";\r\nimport Button from \"./Button\";\r\n\r\nclass Navigation extends React.Component {\r\n  componentDidMount() {\r\n    fetch(this.props.url)\r\n      .then(response => response.json())\r\n      .then(data => this.props.setGenres(data.genres))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      genre,\r\n      genres,\r\n      onGenreChange,\r\n      onChange,\r\n      year,\r\n      rating,\r\n      runtime,\r\n      onSearchButtonClick\r\n    } = this.props;\r\n    return (\r\n      <section className=\"navigation\">\r\n        <Selection\r\n          genre={genre}\r\n          genres={genres}\r\n          onGenreChange={onGenreChange}\r\n        />\r\n\r\n        <FilterSlider data={year} onChange={onChange} />\r\n        <FilterSlider data={rating} onChange={onChange} />\r\n        <FilterSlider data={runtime} onChange={onChange} />\r\n\r\n        <Button onClick={onSearchButtonClick}>Search</Button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./MovieListItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieListItem = ({ movie }) => {\r\n  const { id, title, poster_path, release_date, vote_average } = movie;\r\n  const imgUrl = `https://image.tmdb.org/t/p/w342/${poster_path}`;\r\n  const year = release_date.substring(0, 4);\r\n\r\n  return (\r\n    <li className=\"movie-item\">\r\n      <Link to={`/movie/${id}`} className=\"thumbnail\">\r\n        <img src={imgUrl} alt={title} />\r\n        <div className=\"movie-description\">\r\n          <h2>{title}</h2>\r\n          <section className=\"movie-details\">\r\n            <div className=\"movie-year\">\r\n              <span className=\"title\">Year</span>\r\n              <span>{year}</span>\r\n            </div>\r\n            <div className=\"movie-rating\">\r\n              <span className=\"title\">Rating</span>\r\n              <span>{vote_average}</span>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n","// Movies.js\r\n\r\nimport React from \"react\";\r\nimport \"./Movies.css\";\r\nimport MovieListItem from \"./MovieListItem\";\r\nimport Button from \"../navigation/Button\";\r\n\r\nconst Movies = ({ movies, page, onPageIncrease, onPageDecrease }) => (\r\n  <section>\r\n    <ul className=\"movies\">\r\n      {movies.map(movie => (\r\n        <MovieListItem key={movie.id} movie={movie} />\r\n      ))}\r\n    </ul>\r\n    <div className=\"pagination\">\r\n      <Button onClick={onPageDecrease}>Previous</Button>\r\n      <span>{`Page ${page}`}</span>\r\n      <Button onClick={onPageIncrease}>Next</Button>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\nimport Navigation from \"./navigation/Navigation\";\r\nimport Movies from \"./movies/Movies\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    page: 1,\r\n    total_pages: 1,\r\n    moviesUrl: `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`,\r\n    movies: [],\r\n\r\n    url: `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`,\r\n    genre: \"Action\",\r\n    genres: [],\r\n    year: {\r\n      label: \"year\",\r\n      min: 1990,\r\n      max: 2020,\r\n      step: 1,\r\n      value: { min: 2015, max: 2020 }\r\n    },\r\n    rating: {\r\n      label: \"rating\",\r\n      min: 0,\r\n      max: 10,\r\n      step: 1,\r\n      value: { min: 8, max: 10 }\r\n    },\r\n    runtime: {\r\n      label: \"runtime\",\r\n      min: 0,\r\n      max: 300,\r\n      step: 15,\r\n      value: { min: 60, max: 120 }\r\n    }\r\n  };\r\n\r\n  setGenres = genres => {\r\n    this.setState({ genres });\r\n  };\r\n\r\n  onGenreChange = event => {\r\n    this.setState({ genre: event.target.value });\r\n  };\r\n\r\n  onChange = data => {\r\n    this.setState({\r\n      [data.type]: {\r\n        ...this.state[data.type],\r\n        value: data.value\r\n      }\r\n    });\r\n  };\r\n\r\n  generateUrl = params => {\r\n    const { genres, year, rating, runtime, page } = params;\r\n    const selectedGenre = genres.find(genre => genre.name === params.genre);\r\n    const genreId = selectedGenre.id;\r\n\r\n    const moviesUrl =\r\n      `https://api.themoviedb.org/3/discover/movie?` +\r\n      `api_key=${process.env.REACT_APP_TMDB_API_KEY}&` +\r\n      `language=en-US&sort_by=popularity.desc&` +\r\n      `with_genres=${genreId}&` +\r\n      `primary_release_date.gte=${year.value.min}-01-01&` +\r\n      `primary_release_date.lte=${year.value.max}-12-31&` +\r\n      `vote_average.gte=${rating.value.min}&` +\r\n      `vote_average.lte=${rating.value.max}&` +\r\n      `with_runtime.gte=${runtime.value.min}&` +\r\n      `with_runtime.lte=${runtime.value.max}&` +\r\n      `page=${page}&`;\r\n\r\n    this.setState({ moviesUrl });\r\n  };\r\n\r\n  onSearchButtonClick = () => {\r\n    this.setState({ page: 1 });\r\n    this.generateUrl(this.state);\r\n  };\r\n\r\n  fetchMovies = url => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => this.storeMovies(data))\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  storeMovies = data => {\r\n    const movies = data.results.map(result => {\r\n      const {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      } = result;\r\n      return {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      };\r\n    });\r\n\r\n    this.setState({ movies, total_pages: data.total_pages });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedState = this.getStateFromLocalStorage();\r\n    if (!savedState || (savedState && !savedState.movies.length)) {\r\n      this.fetchMovies(this.state.moviesUrl);\r\n    } else {\r\n      this.setState({ ...savedState });\r\n      this.generateUrl(savedState);\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    this.saveStateToLocalStorage();\r\n    if (this.state.moviesUrl !== nextState.moviesUrl) {\r\n      this.fetchMovies(nextState.moviesUrl);\r\n    }\r\n    if (this.state.page !== nextState.page) {\r\n      this.generateUrl(nextState);\r\n    }\r\n  }\r\n\r\n  onPageIncrease = () => {\r\n    const { page, total_pages } = this.state;\r\n    const nextPage = page + 1;\r\n    if (nextPage <= total_pages) {\r\n      this.setState({ page: nextPage });\r\n    }\r\n  };\r\n\r\n  onPageDecrease = () => {\r\n    const nextPage = this.state.page - 1;\r\n    if (nextPage > 0) {\r\n      this.setState({ page: nextPage });\r\n    }\r\n  };\r\n\r\n  saveStateToLocalStorage = () => {\r\n    localStorage.setItem(\"pinmovie.params\", JSON.stringify(this.state));\r\n  };\r\n\r\n  getStateFromLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem(\"pinmovie.params\"));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"main\">\r\n        <Navigation\r\n          onChange={this.onChange}\r\n          onGenreChange={this.onGenreChange}\r\n          setGenres={this.setGenres}\r\n          onSearchButtonClick={this.onSearchButtonClick}\r\n          {...this.state}\r\n        />\r\n        <Movies\r\n          movies={this.state.movies}\r\n          page={this.state.page}\r\n          onPageIncrease={this.onPageIncrease}\r\n          onPageDecrease={this.onPageDecrease}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst LoadingMovie = () => <h2>Loading Movie</h2>;\r\n\r\nexport default LoadingMovie;\r\n","import React from \"react\";\r\nimport \"./Movie.css\";\r\nimport LoadingMovie from \"./LoadingMovie\";\r\n\r\nclass Movie extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movie: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`;\r\n    fetch(movieUrl)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ movie: data, isLoading: false }))\r\n      .catch(error => console.log(\"Error:\", error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      backdrop_path,\r\n      release_date,\r\n      genres,\r\n      overview,\r\n      vote_average,\r\n      runtime\r\n    } = this.state.movie;\r\n\r\n    const year = release_date ? release_date.substring(0, 4) : null;\r\n\r\n    const backgroundStyle = {\r\n      backgroundImage: `url(http://image.tmdb.org/t/p/w1280/${backdrop_path})`\r\n    };\r\n\r\n    return (\r\n      <div className=\"movie-page\">\r\n        {this.state.isLoading ? (\r\n          <LoadingMovie />\r\n        ) : (\r\n          <div>\r\n            <div className=\"movie-image\" style={backgroundStyle} />\r\n            <div className=\"movie-details\">\r\n              <h1>\r\n                {title}\r\n                <span>({year})</span>\r\n              </h1>\r\n              <section className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                  <div key={genre.id}>\r\n                    <span>{genre.name}</span>\r\n                    {index < genres.length - 1 && (\r\n                      <span className=\"separator\">|</span>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </section>\r\n              <h5>\r\n                Rating:\r\n                <span>{vote_average}</span>\r\n              </h5>\r\n              <h5>\r\n                Runtime:\r\n                <span>{`${runtime} min`}</span>\r\n              </h5>\r\n              <h4>Overview</h4>\r\n              <p>{overview}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./header/Header\";\r\nimport Main from \"./main/Main\";\r\nimport Movie from \"./movie/Movie\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Route path=\"/movie/:movieId\" component={Movie} />\r\n          {/* <Route component={NotFound} /> */}\r\n          <Route component={Main} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}