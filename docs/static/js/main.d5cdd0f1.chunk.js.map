{"version":3,"sources":["header/Header.js","main/navigation/Selection.js","main/navigation/Slider.js","main/navigation/SearchButton.js","main/navigation/Navigation.js","main/movies/MovieListItem.js","main/movies/Movies.js","main/Main.js","App.js","index.js"],"names":["Header","Selection","genres","genre","onGenreChange","className","value","onChange","map","key","id","name","Slider","range","props","type","data","label","this","min","max","step","minValue","maxValue","React","Component","SearchButton","onClick","Navigation","fetch","url","then","response","json","setGenres","catch","error","console","log","year","rating","runtime","onSearchButtonClick","MovieListItem","movie","title","poster_path","release_date","vote_average","imgUrl","substring","src","alt","Movies","state","movies","storeMovies","results","result","vote_count","genre_ids","setState","fetchMovies","nextProps","Main","moviesUrl","process","event","target","generateUrl","genreId","find","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5cdd0f1.chunk.js","sourcesContent":["// Header.js\r\n\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1>Pin Movies</h1>\r\n  </header>\r\n)\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Selection.css\";\r\n\r\nconst Selection = ({ genres, genre, onGenreChange }) => (\r\n  <div className=\"selection\">\r\n    <label>Genre</label>\r\n    <select value={genre} onChange={onGenreChange}>\r\n      {genres.map(genre => (\r\n        <option key={genre.id} value={genre.name}>\r\n          {genre.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport InputRange from \"react-input-range\";\r\n\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport \"./Slider.css\";\r\n\r\nclass Slider extends React.Component {\r\n  onChange = range => {\r\n    this.props.onChange({\r\n      type: this.props.data.label,\r\n      value: range\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { min, max, step, value, label } = this.props.data;\r\n    return (\r\n      <div className=\"slider\">\r\n        <label>{label}</label>\r\n        <InputRange\r\n          minValue={min}\r\n          maxValue={max}\r\n          step={step}\r\n          onChange={this.onChange}\r\n          value={value}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"./SearchButton.css\";\r\n\r\nconst SearchButton = ({ onClick }) => (\r\n  <div className=\"search-button\">\r\n    <button onClick={onClick}>Search</button>\r\n  </div>\r\n);\r\n\r\nexport default SearchButton;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport Selection from \"./Selection\";\r\nimport Slider from \"./Slider\";\r\nimport SearchButton from \"./SearchButton\";\r\n\r\nclass Navigation extends React.Component {\r\n  componentDidMount() {\r\n    fetch(this.props.url)\r\n      .then(response => response.json())\r\n      .then(data => this.props.setGenres(data.genres))\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      genre,\r\n      genres,\r\n      onGenreChange,\r\n      onChange,\r\n      year,\r\n      rating,\r\n      runtime\r\n    } = this.props;\r\n    return (\r\n      <section className=\"navigation\">\r\n        <Selection\r\n          genre={genre}\r\n          genres={genres}\r\n          onGenreChange={onGenreChange}\r\n        />\r\n\r\n        <Slider data={year} onChange={onChange} />\r\n        <Slider data={rating} onChange={onChange} />\r\n        <Slider data={runtime} onChange={onChange} />\r\n\r\n        <SearchButton onClick={this.props.onSearchButtonClick} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./MovieListItem.css\";\r\n\r\nconst MovieListItem = ({ movie }) => {\r\n  const { title, poster_path, release_date, vote_average } = movie;\r\n  const imgUrl = `https://image.tmdb.org/t/p/w342/${poster_path}`;\r\n  const year = release_date.substring(0, 4);\r\n\r\n  return (\r\n    <li className=\"movie-item\">\r\n      <img src={imgUrl} alt={title} />\r\n      <div className=\"movie-description\">\r\n        <h2>{title}</h2>\r\n        <section className=\"movie-details\">\r\n          <div className=\"movie-year\">\r\n            <span className=\"title\">Year</span>\r\n            <span>{year}</span>\r\n          </div>\r\n          <div className=\"movie-rating\">\r\n            <span className=\"title\">Rating</span>\r\n            <span>{vote_average}</span>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n","// Movies.js\r\n\r\nimport React from \"react\";\r\nimport \"./Movies.css\";\r\nimport MovieListItem from \"./MovieListItem\";\r\n\r\nclass Movies extends React.Component {\r\n  state = {\r\n    movies: []\r\n  };\r\n\r\n  storeMovies = data => {\r\n    const movies = data.results.map(result => {\r\n      const {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      } = result;\r\n      return {\r\n        vote_count,\r\n        id,\r\n        genre_ids,\r\n        poster_path,\r\n        title,\r\n        vote_average,\r\n        release_date\r\n      };\r\n    });\r\n\r\n    this.setState({ movies });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovies(this.props.url);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.url !== nextProps.url) {\r\n      this.fetchMovies(nextProps.url);\r\n    }\r\n  }\r\n\r\n  fetchMovies = url => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => this.storeMovies(data))\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <ul className=\"movies\">\r\n          {this.state.movies.map(movie => (\r\n            <MovieListItem key={movie.id} movie={movie} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport \"./Main.css\";\r\nimport Navigation from \"./navigation/Navigation\";\r\nimport Movies from \"./movies/Movies\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    moviesUrl: `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`,\r\n\r\n    url: `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`,\r\n    genre: \"Action\",\r\n    genres: [],\r\n    year: {\r\n      label: \"year\",\r\n      min: 1990,\r\n      max: 2020,\r\n      step: 1,\r\n      value: { min: 2015, max: 2020 }\r\n    },\r\n    rating: {\r\n      label: \"rating\",\r\n      min: 0,\r\n      max: 10,\r\n      step: 1,\r\n      value: { min: 8, max: 10 }\r\n    },\r\n    runtime: {\r\n      label: \"runtime\",\r\n      min: 0,\r\n      max: 300,\r\n      step: 15,\r\n      value: { min: 60, max: 120 }\r\n    }\r\n  };\r\n\r\n  setGenres = genres => {\r\n    this.setState({ genres });\r\n  };\r\n\r\n  onGenreChange = event => {\r\n    this.setState({ genre: event.target.value });\r\n  };\r\n\r\n  onChange = data => {\r\n    this.setState({\r\n      [data.type]: {\r\n        ...this.state[data.type],\r\n        value: data.value\r\n      }\r\n    });\r\n  };\r\n\r\n  generateUrl = () => {\r\n    const { genres, year, rating, runtime } = this.state;\r\n    const selectedGenre = genres.find(genre => genre.name === this.state.genre);\r\n    const genreId = selectedGenre.id;\r\n\r\n    const moviesUrl =\r\n      `https://api.themoviedb.org/3/discover/movie?` +\r\n      `api_key=${process.env.REACT_APP_TMDB_API_KEY}&` +\r\n      `language=en-US&sort_by=popularity.desc&` +\r\n      `with_genres=${genreId}&` +\r\n      `primary_release_date.gte=${year.value.min}-01-01&` +\r\n      `primary_release_date.lte=${year.value.max}-12-31&` +\r\n      `vote_average.gte=${rating.value.min}&` +\r\n      `vote_average.lte=${rating.value.max}&` +\r\n      `with_runtime.gte=${runtime.value.min}&` +\r\n      `with_runtime.lte=${runtime.value.max}&` +\r\n      `page=1&`;\r\n\r\n    this.setState({ moviesUrl });\r\n  };\r\n\r\n  onSearchButtonClick = () => {\r\n    this.generateUrl();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"main\">\r\n        <Navigation\r\n          onChange={this.onChange}\r\n          onGenreChange={this.onGenreChange}\r\n          setGenres={this.setGenres}\r\n          onSearchButtonClick={this.onSearchButtonClick}\r\n          {...this.state}\r\n        />\r\n        <Movies url={this.state.moviesUrl} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Main />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}